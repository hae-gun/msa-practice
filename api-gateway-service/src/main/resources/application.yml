server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: api-gateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates:
            - Path=/reservation-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/reservation-service/(?<segment>.*), /$\{segment}
#        - id: first-service
#          uri: lb://MY-FIRST-SERVICE # Eureka 에 등록할떄는 URL을 lb://{Eureka에 등록된 Name} 으로 설정해준다.
#          predicates:
#          - Path=/first-service/**
#          filters:
#          - CustomFilter
#        #            - AddRequestHeader=first-request, first-request-header2
#        #            - AddResponseHeader=first-response, first-response-header2
#        - id: second-service
#          uri: lb://MY-SECOND-SERVICE
#          predicates:
#          - Path=/second-service/**
#          filters:
#          - name: CustomFilter
#          - name: LoggingFilter
#            args:
#              baseMessage: Spring Cloud Gateway Logging Filter
#              preLogger: true
#              postLogger: true
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
# Netty Service 로 동작된다. 비동기 서비스.
# 해당 gateway 로 요청을 넣게되면
# Zuul 과는 다르게 uri/Path 형태로 요청을 하게됨.
# 즉 각 서비스의 컨트롤러에 /first-service, /second-service RequestMapping 이 정의 되어있어야 한다.
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh
